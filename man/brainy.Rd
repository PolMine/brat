% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/brainy.R
\name{brainy}
\alias{brainy}
\title{Brat shiny HTML app.}
\usage{
brainy(doc_dir, coll_data, theme = "paper")
}
\arguments{
\item{doc_dir}{Diretory with plaint text documents (\emph{.txt), annotation files
(}.ann) and rds files with \code{Annotation} objects stored using \code{saveRDS()}.}

\item{coll_data}{Configuration of annotation scheme.}

\item{theme}{The theme passed into shinythemes.}
}
\description{
Call brainy, the brat shiny app to annotate multiple documents.
}
\details{
The function takes a document directory (\code{doc_dir}) as input. Plain text
files present in the directory (.txt file extension) will be available
as documents to be annotated.

Annotations for these documents will be stored in the same directory using
the brat standoff annotation format (.ann file extension). The name of the
annotation file will be identical with text document, just using the .ann file
extension. Annotation files that are present before annotating documents will
be parsed and annotations are shown.

If the document has already been tokenized, use the \code{Annotation} class of the
NLP package to infuse this information for the annotation exercise. In this
case, when creating a new annotation, the span of text highlighted will be
checked against the tokenization and character offsets will be mapped on the
existing tokenisation. This can also be useful for speeding up annotation,
because annotators need not highlight the exact beginning and end of tokens
to create an annotation that looks all right.

Files with an existing token annotation are expected to have the same file
name as the document, using an .rds file extension. These rds files are
expected to be \code{Annotation} class objects that have been stored using
\code{saveRDS()}.
}
\examples{
library(brat)

# Prepare directory with .txt and .ann files: The package includes some 
# sample files - we create a temporary copy

doc_dir_pkg <- system.file(package = "brat", "extdata", "sample_data")
doc_dir <- file.path(tempdir(), "brat")
if (!dir.exists(doc_dir)) dir.create(doc_dir)
if (length(list.files(doc_dir)) > 0L) file.remove(list.files(doc_dir, full.names = TRUE))
for (file in list.files(doc_dir_pkg, full.names = TRUE)){
  file.copy(from = file, to = file.path(doc_dir, basename(file)))
}

# Define collection data (= available annotations)

annotation_colors <- RColorBrewer::brewer.pal(8, "Accent")
coll_data <- list(
  entity_types = list(
    entity("Person", bgColor = annotation_colors[1]),
    entity("Organisaation", bgColor = annotation_colors[2]),
    entity("Location", bgColor = annotation_colors[3]),
    entity("Date", bgColor = annotation_colors[4])
  ),
  relation_types = list(
    relation("Anaphora", color = annotation_colors[5], roles = c("Anaphor", "Entity"), targets = c("Person", "Person")),
    relation("Anaphora", color = annotation_colors[6], roles = c("Anaphor", "Entity"), targets = c("Person", "Person"))
  )
)

# Run brainy app (but only in interactive mode)

if (interactive()) brainy(doc_dir = doc_dir, coll_data = coll_data)
}
