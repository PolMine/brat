% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/brat.R, R/bradget.R
\docType{package}
\name{brat}
\alias{brat}
\alias{brat-package}
\alias{bratOutput}
\alias{renderBrat}
\alias{bradget}
\title{Create brat htmlwidget}
\usage{
brat(doc_data = list(), coll_data = list(), width = NULL, height = NULL)

bratOutput(outputId, width = "100\%", height = "400px")

renderBrat(expr, env = parent.frame(), quoted = FALSE)

bradget(txt_file, ann_file = with_ext(txt_file, "ann"), coll_data)
}
\arguments{
\item{doc_data}{Data to be passed into widget.}

\item{coll_data}{bla bla}

\item{width}{The width of the widget.}

\item{height}{The height of the widget.}

\item{outputId}{The ID of the widget.}

\item{expr}{An expression.}

\item{env}{An environment.}

\item{quoted}{A \code{logical} value.}

\item{txt_file}{File with plan text of document to be annotated.}

\item{ann_file}{File with annotations (brat standoff format). If not stated
explicitly, the file is assumed to be in the same directory as txt file yet
with *.ann file extension.}
}
\value{
A \code{AnnotatedPlainTextDocument} object as defined in the NLP package.
}
\description{
This is a lightweight wrapper for the brat annotation tool.
}
\examples{
if (interactive()){
  brat(
    doc_data = example_doc_data,
    coll_data = example_coll_data
  )
}

# A second example

library(NLP)
merkel_min <- merkel
merkel_min$annotation <- merkel$annotation[merkel$annotation$type == "ner"]
# d <- as.BratDocData(merkel_min)
# collData <- list(
# entity_types = list(list(
#    type = "ner",
#    labels = c("Named Entity", "NE"),
#     bgColor = "#7fa2ff",
#    borderColor = "darken"
#   ))
# )
if (interactive()) brat(doc_data = d, coll_data = collData)
coll_data <- list(
  entity_types = list(
    list(
      type = "Person",
      labels = c("Person", "Per"),
      bgColor = RColorBrewer::brewer.pal(8, "Accent")[1],
      borderColor = "darken",
      arcs = list(list(targets = list("Person")))
    ),
    list(
      type = "Organization",
      labels = c("Organization", "Org"),
      bgColor = RColorBrewer::brewer.pal(8, "Accent")[2],
      borderColor = "darken"
    ),
    list(
      type = "Location",
      labels = c("Location", "Loc"),
      bgColor = RColorBrewer::brewer.pal(8, "Accent")[3],
      borderColor = "darken"
    )
  ),
  relation_types = list(list(
    type = "Anaphora",
    labels = c("Anaphora", "Ana"),
    dashArray = "3,3",
    color = "purple",
    args = list(
      list(role = "Anaphor", targets = "Person"),
      list(role = "Entity", targets = "Person")
    )
   ))
)

txt_src <- system.file(package = "brat", "extdata", "sample_data", "edokelley.txt")
ann_src <- system.file(package = "brat", "extdata", "sample_data", "edokelley.ann")
txt_file <- file.path(tempdir(), "edokelley.txt")
ann_file <- file.path(tempdir(), "edokelley.ann")
file.copy(txt_src, txt_file)
file.copy(ann_src, ann_file)

if (interactive()) bradget(txt_file = txt_file, coll_data = coll_data)


# A second example 

library(NLP)
merkel_min <- merkel
merkel_min$annotation <- merkel$annotation[merkel$annotation$type == "ner"]

ann_file <- write_ann_file(x = as.doc_data(merkel_min))
txt_file <- xfun::with_ext(ann_file, ".txt")
cat(merkel_min$content, file = txt_file)

collData <- list(
  entity_types = list(list(
    type = "ner",
    labels = c("Named Entity", "NE"),
    bgColor = "#7fa2ff",
    borderColor = "darken",
    arcs = list(list(targets = list("ner")))
  )),
  relation_types = list(list(
    type = "Anaphora",
    labels = c("Anaphora", "Ana"),
    dashArray = "3,3",
    color = "purple",
    args = list(
      list(role = "Anaphor", targets = "ner"),
      list(role = "Entity", targets = "ner")
    )
   ))
)

if (interactive()) bradget(txt_file = txt_file, coll_data = collData)
}
\author{
Andreas Blaette
}
